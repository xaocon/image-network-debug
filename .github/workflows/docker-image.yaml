name: Build and publish a Docker image to ghcr.io
on:
  schedule:
    - cron: '4 10 * * *'
  push:
    branches:
      - '**'
    tags:
      - 'v*.*.*'
  pull_request:
    branches:
      - 'main'

# on:

#   # publish on releases, e.g. v2.1.13 (image tagged as "2.1.13" - "v" prefix is removed)
#   release:
#     types: [ published ]

#   # publish on pushes to the main branch (image tagged as "latest")
#   push:
#     branches:
#       - main

jobs:
  docker_publish:
    runs-on: "ubuntu-latest"

    steps:
      -
        name: Checkout
        uses: actions/checkout@v2
      -
        name: Docker meta
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: |
            ghcr.io/xaocon/image-network-debug
          labels: |
            org.opencontainers.image.description="For debugging in k8s"
            org.opencontainers.image.licenses=MIT
          tags: |
            type=raw,value=latest,enable=${{ github.ref == format('refs/heads/{0}', github.event.repository.default_branch) }}
            type=schedule
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=sha
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      -
        name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1
      -
        name: Login to GitHub Container Registry
        uses: docker/login-action@v1 
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      -
        name: Build and push
        uses: docker/build-push-action@v2
        with:
          platforms: linux/amd64,linux/arm64
          push: ${{ github.event_name != 'pull_request' }}
          pull: ${{ github.event_name == 'schedule' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
